-- | This file is generated by plutus-preprocessor/src/Main.hs
module Test.Cardano.Ledger.Alonzo.PlutusScripts where

import Cardano.Ledger.Alonzo.Scripts (Script (..))
import Data.ByteString.Short (pack)

{- Preproceesed Plutus Script
guessTheNumber'2_0 :: PlutusTx.Data.Data ->
                      PlutusTx.Data.Data -> ()
guessTheNumber'2_0 d1_1 d2_2 = if d1_1 PlutusTx.Eq.== d2_2
                                then GHC.Tuple.()
                                else PlutusTx.Prelude.error GHC.Tuple.()
-}

guessTheNumber2 :: Script era
guessTheNumber2 =
  (PlutusScript . pack . concat)
    [ [89, 3, 7, 1, 0, 0, 50, 0, 50, 0, 50, 0, 51, 50, 0],
      [32, 2, 0, 51, 32, 2, 0, 51, 50, 0, 32, 2, 0, 50, 0],
      [50, 0, 50, 0, 50, 0, 51, 32, 2, 0, 51, 51, 51, 32, 2],
      [0, 32, 2, 0, 32, 2, 0, 50, 0, 50, 0, 50, 0, 50, 0],
      [50, 0, 50, 0, 0, 18, 0, 32, 3, 51, 83, 1, 67, 51, 80],
      [4, 48, 6, 18, 0, 0, 16, 2, 0, 18, 0, 1, 146, 0, 53],
      [0, 64, 25, 1, 129, 32, 6, 18, 0, 0, 19, 80, 2, 32, 2],
      [0, 0, 19, 80, 1, 32, 2, 0, 0, 35, 85, 85, 1, 97, 32],
      [2, 0, 32, 3, 48, 3, 32, 2, 0, 32, 3, 51, 51, 83, 0],
      [112, 2, 32, 3, 51, 51, 53, 48, 8, 0, 34, 0, 32, 3, 48],
      [19, 0, 48, 2, 32, 2, 0, 32, 0, 24, 32, 2, 0, 1, 114],
      [0, 32, 0, 23, 32, 2, 0, 1, 112, 24, 32, 2, 0, 51, 51],
      [51, 83, 0, 144, 3, 32, 2, 0, 1, 130, 0, 32, 2, 0, 51],
      [53, 48, 24, 51, 1, 64, 5, 0, 50, 0, 51, 53, 48, 23, 18],
      [0, 0, 19, 0, 177, 32, 0, 1, 0, 80, 3, 32, 0, 26, 1],
      [194, 0, 32, 0, 24, 32, 2, 0, 1, 130, 0, 32, 0, 24, 1],
      [146, 0, 51, 51, 51, 83, 0, 128, 2, 32, 2, 0, 1, 114, 0],
      [32, 2, 0, 1, 130, 0, 32, 3, 48, 18, 0, 48, 2, 32, 2],
      [0, 1, 114, 0, 32, 0, 23, 1, 130, 0, 51, 51, 51, 83, 0],
      [128, 2, 32, 2, 0, 1, 114, 0, 32, 2, 0, 1, 130, 0, 32],
      [0, 23, 32, 2, 0, 51, 53, 48, 20, 18, 0, 0, 19, 0, 129],
      [32, 0, 1, 0, 48, 2, 32, 2, 0, 1, 112, 24, 32, 3, 51],
      [51, 53, 48, 8, 0, 34, 0, 32, 0, 23, 32, 2, 0, 32, 0],
      [24, 32, 2, 0, 1, 114, 0, 32, 0, 23, 32, 2, 0, 51, 53],
      [48, 20, 18, 0, 0, 16, 7, 0, 48, 2, 1, 130, 0, 32, 3],
      [83, 85, 0, 192, 2, 32, 2, 0, 53, 53, 80, 14, 0, 50, 0],
      [32, 3, 51, 83, 1, 99, 51, 0, 129, 32, 0, 1, 0, 64, 2],
      [32, 3, 51, 0, 145, 32, 0, 1, 0, 64, 2, 32, 0, 24, 1],
      [162, 0, 18, 0, 32, 2, 0, 32, 2, 0, 48, 5, 0, 98, 0],
      [32, 1, 32, 2, 0, 32, 2, 0, 32, 3, 48, 4, 0, 112, 6],
      [32, 1, 32, 2, 0, 32, 2, 0, 32, 3, 0, 48, 6, 32, 1],
      [32, 2, 0, 32, 2, 0, 32, 3, 0, 32, 6, 32, 1, 32, 2],
      [0, 32, 2, 0, 32, 3, 0, 16, 6, 32, 0, 1, 17, 32, 2],
      [0, 18, 0, 51, 0, 16, 3, 0, 33, 18, 0, 0, 18, 0, 32],
      [3, 32, 3, 51, 87, 168, 0, 128, 72, 4, 25, 186, 64, 8, 0],
      [72, 0, 128, 12, 128, 12, 205, 94, 160, 2, 1, 0, 14, 102, 240],
      [0, 32, 1, 53, 0, 18, 0, 0, 17, 32, 3, 0, 19, 85, 0],
      [162, 0, 32, 1, 32, 2, 0, 32, 3, 51, 83, 80, 12, 0, 34],
      [0, 51, 53, 53, 0, 208, 2, 32, 0, 11, 32, 2, 0, 32, 0],
      [12, 0, 194, 0, 32, 2, 0, 51, 53, 53, 0, 240, 4, 32, 0],
      [12, 32, 2, 0, 32, 3, 51, 83, 0, 211, 48, 9, 0, 96, 3],
      [32, 3, 51, 83, 0, 193, 32, 0, 1, 0, 160, 6, 0, 50, 0],
      [0, 240, 17, 0, 224, 11, 18, 0, 32, 0, 2, 18, 0, 32, 0],
      [1, 32, 0, 1, 18, 0, 0, 18, 0, 0, 17, 18, 0, 32, 0],
      [2, 18, 0, 32, 1, 32, 2, 0, 51, 0, 16, 4, 0, 49, 32],
      [0, 1, 17, 32, 3, 32, 3, 0, 16, 1, 32, 2, 0, 51, 0],
      [51, 32, 3, 0, 16, 1, 0, 32, 1, 17, 17, 32, 3, 53, 0],
      [34, 0, 18, 0, 51, 0, 18, 0, 53, 0, 50, 0, 32, 3, 0],
      [32, 3, 32, 3, 80, 3, 32, 2, 0, 48, 1, 0, 48, 1, 18],
      [0, 50, 0, 50, 0, 48, 1, 0, 18, 0, 32, 3, 48, 3, 50],
      [0, 48, 1, 0, 16, 2, 0, 18, 0, 32, 1, 32, 3, 83, 0],
      [65, 32, 3, 83, 0, 64, 3, 53, 0, 48, 1, 0, 17]
    ]

{- Preproceesed Plutus Script
guessTheNumber'3_0 :: PlutusTx.Data.Data ->
                      PlutusTx.Data.Data -> PlutusTx.Data.Data -> ()
guessTheNumber'3_0 d1_1 d2_2 _d3_3 = if d1_1 PlutusTx.Eq.== d2_2
                                      then GHC.Tuple.()
                                      else PlutusTx.Prelude.error GHC.Tuple.()
-}

guessTheNumber3 :: Script era
guessTheNumber3 =
  (PlutusScript . pack . concat)
    [ [89, 3, 9, 1, 0, 0, 50, 0, 50, 0, 50, 0, 51, 50, 0],
      [32, 2, 0, 51, 32, 2, 0, 51, 50, 0, 32, 2, 0, 50, 0],
      [50, 0, 50, 0, 50, 0, 51, 32, 2, 0, 51, 51, 51, 32, 2],
      [0, 32, 2, 0, 32, 2, 0, 50, 0, 50, 0, 50, 0, 50, 0],
      [50, 0, 50, 0, 0, 18, 0, 32, 2, 0, 51, 53, 48, 21, 51],
      [53, 0, 83, 0, 113, 32, 0, 1, 0, 48, 2, 32, 0, 26, 32],
      [3, 80, 5, 1, 160, 25, 18, 0, 97, 32, 0, 1, 53, 0, 34],
      [0, 32, 0, 1, 53, 0, 18, 0, 32, 0, 2, 53, 85, 80, 22],
      [18, 0, 32, 2, 0, 51, 0, 50, 0, 32, 2, 0, 51, 51, 53],
      [48, 7, 0, 34, 0, 51, 51, 51, 83, 0, 128, 2, 32, 2, 0],
      [51, 1, 48, 3, 0, 34, 0, 32, 2, 0, 1, 130, 0, 32, 0],
      [23, 32, 2, 0, 1, 114, 0, 32, 0, 23, 1, 130, 0, 32, 3],
      [51, 51, 53, 48, 9, 0, 50, 0, 32, 0, 24, 32, 2, 0, 32],
      [3, 51, 83, 1, 131, 48, 20, 0, 80, 3, 32, 3, 51, 83, 1],
      [113, 32, 0, 1, 48, 11, 18, 0, 0, 16, 5, 0, 50, 0, 1],
      [160, 28, 32, 2, 0, 1, 130, 0, 32, 0, 24, 32, 2, 0, 1],
      [128, 25, 32, 3, 51, 51, 53, 48, 8, 0, 34, 0, 32, 0, 23],
      [32, 2, 0, 32, 0, 24, 32, 2, 0, 51, 1, 32, 3, 0, 34],
      [0, 32, 0, 23, 32, 2, 0, 1, 112, 24, 32, 3, 51, 51, 53],
      [48, 8, 0, 34, 0, 32, 0, 23, 32, 2, 0, 32, 0, 24, 32],
      [2, 0, 1, 114, 0, 32, 3, 51, 83, 1, 65, 32, 0, 1, 48],
      [8, 18, 0, 0, 16, 3, 0, 34, 0, 32, 0, 23, 1, 130, 0],
      [51, 51, 51, 83, 0, 128, 2, 32, 2, 0, 1, 114, 0, 32, 2],
      [0, 1, 130, 0, 32, 0, 23, 32, 2, 0, 1, 114, 0, 32, 3],
      [51, 83, 1, 65, 32, 0, 1, 0, 112, 3, 0, 32, 24, 32, 2],
      [0, 53, 53, 80, 12, 0, 34, 0, 32, 3, 83, 85, 0, 224, 3],
      [32, 2, 0, 51, 53, 48, 22, 51, 48, 8, 18, 0, 0, 16, 4],
      [0, 34, 0, 51, 48, 9, 18, 0, 0, 16, 4, 0, 34, 0, 1],
      [128, 26, 32, 1, 32, 2, 0, 32, 2, 0, 32, 3, 0, 80, 6],
      [32, 2, 0, 18, 0, 32, 2, 0, 32, 2, 0, 51, 0, 64, 7],
      [0, 98, 0, 18, 0, 32, 2, 0, 32, 2, 0, 48, 3, 0, 98],
      [0, 18, 0, 32, 2, 0, 32, 2, 0, 48, 2, 0, 98, 0, 18],
      [0, 32, 2, 0, 32, 2, 0, 48, 1, 0, 98, 0, 0, 17, 18],
      [0, 32, 1, 32, 3, 48, 1, 0, 48, 2, 17, 32, 0, 1, 32],
      [2, 0, 50, 0, 51, 53, 122, 128, 8, 4, 128, 65, 155, 164, 0],
      [128, 4, 128, 8, 0, 200, 0, 204, 213, 234, 0, 32, 16, 0, 230],
      [111, 0, 2, 0, 19, 80, 1, 32, 0, 1, 18, 0, 48, 1, 53],
      [80, 10, 32, 2, 0, 18, 0, 32, 2, 0, 51, 53, 53, 0, 192],
      [2, 32, 3, 51, 83, 80, 13, 0, 34, 0, 0, 178, 0, 32, 2],
      [0, 0, 192, 12, 32, 2, 0, 32, 3, 51, 83, 80, 15, 0, 66],
      [0, 0, 194, 0, 32, 2, 0, 51, 53, 48, 13, 51, 0, 144, 6],
      [0, 50, 0, 51, 53, 48, 12, 18, 0, 0, 16, 10, 0, 96, 3],
      [32, 0, 15, 1, 16, 14, 0, 177, 32, 2, 0, 0, 33, 32, 2],
      [0, 0, 18, 0, 0, 17, 32, 0, 1, 32, 0, 1, 17, 32, 2],
      [0, 0, 33, 32, 2, 0, 18, 0, 32, 3, 48, 1, 0, 64, 3],
      [18, 0, 0, 17, 18, 0, 50, 0, 48, 1, 0, 18, 0, 32, 3],
      [48, 3, 50, 0, 48, 1, 0, 16, 2, 0, 17, 17, 18, 0, 51],
      [80, 2, 32, 1, 32, 3, 48, 1, 32, 3, 80, 3, 32, 2, 0],
      [48, 2, 0, 50, 0, 53, 0, 50, 0, 32, 3, 0, 16, 3, 0],
      [17, 32, 3, 32, 3, 32, 3, 0, 16, 1, 32, 2, 0, 51, 0],
      [51, 32, 3, 0, 16, 1, 0, 32, 1, 32, 2, 0, 18, 0, 53],
      [48, 4, 18, 0, 53, 48, 4, 0, 51, 80, 3, 0, 16, 1, 1]
    ]

{- Preproceesed Plutus Script
evendata'_0 :: PlutusTx.Data.Data ->
               PlutusTx.Data.Data -> PlutusTx.Data.Data -> ()
evendata'_0 (PlutusTx.Data.I n_1) _d2_2 _d3_3 = if PlutusTx.Prelude.modulo n_1 2 PlutusTx.Eq.== 0
                                                 then GHC.Tuple.()
                                                 else PlutusTx.Prelude.error GHC.Tuple.()
-}

evendata3 :: Script era
evendata3 =
  (PlutusScript . pack . concat)
    [ [88, 255, 1, 0, 0, 51, 50, 0, 32, 2, 0, 50, 0, 50, 0],
      [51, 32, 2, 0, 51, 50, 0, 32, 2, 0, 51, 51, 51, 32, 2],
      [0, 32, 2, 0, 32, 2, 0, 51, 32, 2, 0, 50, 0, 50, 0],
      [0, 18, 0, 32, 2, 0, 51, 51, 51, 83, 0, 112, 3, 32, 2],
      [0, 98, 0, 32, 2, 0, 98, 0, 32, 3, 51, 83, 1, 99, 51],
      [80, 20, 1, 83, 55, 144, 1, 36, 0, 137, 0, 1, 0, 0, 73],
      [0, 26, 128, 56, 4, 128, 65, 0, 16, 3, 16, 1, 0, 48, 3],
      [9, 0, 48, 144, 0, 0, 144, 0, 0, 144, 0, 144, 1, 0, 16],
      [1, 0, 16, 1, 128, 40, 3, 16, 1, 0, 9, 0, 16, 1, 0],
      [16, 1, 0, 25, 128, 32, 3, 128, 49, 0, 9, 0, 16, 1, 0],
      [16, 1, 0, 24, 1, 128, 49, 0, 9, 0, 16, 1, 0, 16, 1],
      [0, 24, 1, 0, 49, 0, 9, 0, 16, 1, 0, 16, 1, 0, 24],
      [0, 128, 49, 0, 0, 8, 137, 0, 16, 0, 1, 9, 0, 16, 0],
      [144, 1, 0, 25, 128, 8, 2, 0, 24, 144, 0, 0, 136, 144, 1],
      [0, 9, 0, 25, 128, 8, 1, 128, 16, 137, 0, 0, 8, 144, 0],
      [0, 144, 1, 0, 25, 0, 25, 154, 189, 64, 4, 1, 128, 20, 205],
      [210, 0, 64, 2, 36, 0, 64, 0, 4, 36, 0, 64, 0, 2, 64],
      [0, 3]
    ]

{- Preproceesed Plutus Script
odddata'_0 :: PlutusTx.Data.Data ->
              PlutusTx.Data.Data -> PlutusTx.Data.Data -> ()
odddata'_0 (PlutusTx.Data.I n_1) _d2_2 _d3_3 = if PlutusTx.Prelude.modulo n_1 2 PlutusTx.Eq.== 1
                                                then GHC.Tuple.()
                                                else PlutusTx.Prelude.error GHC.Tuple.()
-}

odddata3 :: Script era
odddata3 =
  (PlutusScript . pack . concat)
    [ [88, 255, 1, 0, 0, 51, 50, 0, 32, 2, 0, 50, 0, 50, 0],
      [51, 32, 2, 0, 51, 50, 0, 32, 2, 0, 51, 51, 51, 32, 2],
      [0, 32, 2, 0, 32, 2, 0, 51, 32, 2, 0, 50, 0, 50, 0],
      [0, 18, 0, 32, 2, 0, 51, 51, 51, 83, 0, 112, 3, 32, 2],
      [0, 98, 0, 32, 2, 0, 98, 0, 32, 3, 51, 83, 1, 99, 51],
      [80, 20, 1, 83, 55, 144, 1, 36, 0, 137, 0, 17, 0, 0, 73],
      [0, 26, 128, 56, 4, 128, 65, 0, 16, 3, 16, 1, 0, 48, 3],
      [9, 0, 48, 144, 0, 0, 144, 0, 0, 144, 0, 144, 1, 0, 16],
      [1, 0, 16, 1, 128, 40, 3, 16, 1, 0, 9, 0, 16, 1, 0],
      [16, 1, 0, 25, 128, 32, 3, 128, 49, 0, 9, 0, 16, 1, 0],
      [16, 1, 0, 24, 1, 128, 49, 0, 9, 0, 16, 1, 0, 16, 1],
      [0, 24, 1, 0, 49, 0, 9, 0, 16, 1, 0, 16, 1, 0, 24],
      [0, 128, 49, 0, 0, 8, 137, 0, 16, 0, 1, 9, 0, 16, 0],
      [144, 1, 0, 25, 128, 8, 2, 0, 24, 144, 0, 0, 136, 144, 1],
      [0, 9, 0, 25, 128, 8, 1, 128, 16, 137, 0, 0, 8, 144, 0],
      [0, 144, 1, 0, 25, 0, 25, 154, 189, 64, 4, 1, 128, 20, 205],
      [210, 0, 64, 2, 36, 0, 64, 0, 4, 36, 0, 64, 0, 2, 64],
      [0, 3]
    ]

{- Preproceesed Plutus Script
evenRedeemer'_0 :: PlutusTx.Data.Data ->
                   PlutusTx.Data.Data -> PlutusTx.Data.Data -> ()
evenRedeemer'_0 _d1_1 (PlutusTx.Data.I n_2) _d3_3 = if PlutusTx.Prelude.modulo n_2 2 PlutusTx.Eq.== 0
                                                     then GHC.Tuple.()
                                                     else PlutusTx.Prelude.error GHC.Tuple.()
-}

evenRedeemer3 :: Script era
evenRedeemer3 =
  (PlutusScript . pack . concat)
    [ [88, 255, 1, 0, 0, 51, 50, 0, 32, 2, 0, 50, 0, 50, 0],
      [51, 32, 2, 0, 51, 50, 0, 32, 2, 0, 51, 51, 51, 32, 2],
      [0, 32, 2, 0, 32, 2, 0, 51, 32, 2, 0, 50, 0, 50, 0],
      [0, 18, 0, 32, 2, 0, 51, 51, 51, 83, 0, 112, 2, 32, 2],
      [0, 98, 0, 32, 2, 0, 98, 0, 32, 3, 51, 83, 1, 99, 51],
      [80, 20, 1, 83, 55, 144, 1, 36, 0, 137, 0, 1, 0, 0, 73],
      [0, 26, 128, 56, 4, 128, 65, 0, 16, 3, 16, 1, 0, 48, 3],
      [9, 0, 48, 144, 0, 0, 144, 0, 0, 144, 0, 144, 1, 0, 16],
      [1, 0, 16, 1, 128, 40, 3, 16, 1, 0, 9, 0, 16, 1, 0],
      [16, 1, 0, 25, 128, 32, 3, 128, 49, 0, 9, 0, 16, 1, 0],
      [16, 1, 0, 24, 1, 128, 49, 0, 9, 0, 16, 1, 0, 16, 1],
      [0, 24, 1, 0, 49, 0, 9, 0, 16, 1, 0, 16, 1, 0, 24],
      [0, 128, 49, 0, 0, 8, 137, 0, 16, 0, 1, 9, 0, 16, 0],
      [144, 1, 0, 25, 128, 8, 2, 0, 24, 144, 0, 0, 136, 144, 1],
      [0, 9, 0, 25, 128, 8, 1, 128, 16, 137, 0, 0, 8, 144, 0],
      [0, 144, 1, 0, 25, 0, 25, 154, 189, 64, 4, 1, 128, 20, 205],
      [210, 0, 64, 2, 36, 0, 64, 0, 4, 36, 0, 64, 0, 2, 64],
      [0, 3]
    ]

{- Preproceesed Plutus Script
oddRedeemer'_0 :: PlutusTx.Data.Data ->
                  PlutusTx.Data.Data -> PlutusTx.Data.Data -> ()
oddRedeemer'_0 _d1_1 (PlutusTx.Data.I n_2) _d3_3 = if PlutusTx.Prelude.modulo n_2 2 PlutusTx.Eq.== 1
                                                    then GHC.Tuple.()
                                                    else PlutusTx.Prelude.error GHC.Tuple.()
-}

oddRedeemer3 :: Script era
oddRedeemer3 =
  (PlutusScript . pack . concat)
    [ [88, 255, 1, 0, 0, 51, 50, 0, 32, 2, 0, 50, 0, 50, 0],
      [51, 32, 2, 0, 51, 50, 0, 32, 2, 0, 51, 51, 51, 32, 2],
      [0, 32, 2, 0, 32, 2, 0, 51, 32, 2, 0, 50, 0, 50, 0],
      [0, 18, 0, 32, 2, 0, 51, 51, 51, 83, 0, 112, 2, 32, 2],
      [0, 98, 0, 32, 2, 0, 98, 0, 32, 3, 51, 83, 1, 99, 51],
      [80, 20, 1, 83, 55, 144, 1, 36, 0, 137, 0, 17, 0, 0, 73],
      [0, 26, 128, 56, 4, 128, 65, 0, 16, 3, 16, 1, 0, 48, 3],
      [9, 0, 48, 144, 0, 0, 144, 0, 0, 144, 0, 144, 1, 0, 16],
      [1, 0, 16, 1, 128, 40, 3, 16, 1, 0, 9, 0, 16, 1, 0],
      [16, 1, 0, 25, 128, 32, 3, 128, 49, 0, 9, 0, 16, 1, 0],
      [16, 1, 0, 24, 1, 128, 49, 0, 9, 0, 16, 1, 0, 16, 1],
      [0, 24, 1, 0, 49, 0, 9, 0, 16, 1, 0, 16, 1, 0, 24],
      [0, 128, 49, 0, 0, 8, 137, 0, 16, 0, 1, 9, 0, 16, 0],
      [144, 1, 0, 25, 128, 8, 2, 0, 24, 144, 0, 0, 136, 144, 1],
      [0, 9, 0, 25, 128, 8, 1, 128, 16, 137, 0, 0, 8, 144, 0],
      [0, 144, 1, 0, 25, 0, 25, 154, 189, 64, 4, 1, 128, 20, 205],
      [210, 0, 64, 2, 36, 0, 64, 0, 4, 36, 0, 64, 0, 2, 64],
      [0, 3]
    ]

{- Preproceesed Plutus Script
sumsTo10'_0 :: PlutusTx.Data.Data ->
               PlutusTx.Data.Data -> PlutusTx.Data.Data -> ()
sumsTo10'_0 (PlutusTx.Data.I m_1) (PlutusTx.Data.I n_2) _d3_3 = if (m_1 PlutusTx.Numeric.+ n_2) PlutusTx.Eq.== 10
                                                                 then GHC.Tuple.()
                                                                 else PlutusTx.Prelude.error GHC.Tuple.()
-}

sumsTo103 :: Script era
sumsTo103 =
  (PlutusScript . pack . concat)
    [ [89, 1, 58, 1, 0, 0, 51, 32, 2, 0, 51, 50, 0, 32, 2],
      [0, 50, 0, 50, 0, 50, 0, 51, 32, 2, 0, 51, 50, 0, 32],
      [2, 0, 51, 51, 51, 32, 2, 0, 32, 2, 0, 32, 2, 0, 50],
      [0, 50, 0, 0, 18, 0, 32, 2, 0, 50, 0, 51, 51, 51, 83],
      [0, 96, 4, 32, 2, 0, 48, 3, 22, 32, 2, 0, 32, 3, 0],
      [65, 98, 0, 32, 3, 51, 51, 53, 48, 8, 0, 82, 0, 32, 3],
      [0, 81, 98, 0, 32, 2, 0, 48, 6, 22, 32, 2, 0, 51, 53],
      [48, 24, 51, 53, 1, 80, 23, 51, 53, 1, 103, 0, 2, 0, 18],
      [64, 40, 64, 0, 58, 64, 6, 160, 20, 3, 160, 56, 64, 4, 0],
      [96, 10, 44, 64, 4, 0, 96, 10, 44, 3, 68, 0, 64, 6, 0],
      [98, 196, 0, 64, 6, 0, 98, 192, 48, 64, 12, 36, 0, 196, 0],
      [36, 0, 64, 4, 0, 64, 4, 0, 96, 10, 0, 196, 0, 64, 2],
      [64, 4, 0, 64, 4, 0, 64, 6, 96, 8, 0, 224, 12, 64, 2],
      [64, 4, 0, 64, 4, 0, 64, 6, 0, 96, 12, 64, 2, 64, 4],
      [0, 64, 4, 0, 64, 6, 0, 64, 12, 64, 2, 64, 4, 0, 64],
      [4, 0, 64, 6, 0, 32, 12, 64, 0, 2, 34, 64, 4, 0, 0],
      [66, 64, 4, 0, 36, 0, 64, 6, 96, 2, 0, 128, 6, 36, 0],
      [0, 34, 36, 0, 64, 2, 64, 6, 96, 2, 0, 96, 4, 34, 64],
      [0, 2, 36, 0, 0, 34, 64, 0, 2, 64, 4, 0, 100, 0, 102],
      [106, 245, 0, 16, 6, 0, 83, 55, 72, 1, 0, 8, 144, 1, 0],
      [0, 16, 144, 1, 0, 0, 9, 0, 0, 8, 144, 0, 0, 144, 0],
      [0, 129]
    ]

{- Preproceesed Plutus Script
oddRedeemer2'_0 :: PlutusTx.Data.Data -> PlutusTx.Data.Data -> ()
oddRedeemer2'_0 (PlutusTx.Data.I n_1) _d3_2 = if PlutusTx.Prelude.modulo n_1 2 PlutusTx.Eq.== 1
                                               then GHC.Tuple.()
                                               else PlutusTx.Prelude.error GHC.Tuple.()
-}

oddRedeemer2 :: Script era
oddRedeemer2 =
  (PlutusScript . pack . concat)
    [ [88, 254, 1, 0, 0, 51, 50, 0, 32, 2, 0, 50, 0, 50, 0],
      [51, 32, 2, 0, 51, 50, 0, 32, 2, 0, 51, 51, 51, 32, 2],
      [0, 32, 2, 0, 32, 2, 0, 51, 32, 2, 0, 50, 0, 50, 0],
      [0, 18, 0, 32, 3, 51, 51, 53, 48, 6, 0, 34, 0, 32, 6],
      [32, 2, 0, 32, 6, 32, 2, 0, 51, 53, 48, 21, 51, 53, 1],
      [48, 20, 51, 121, 0, 18, 64, 8, 144, 1, 16, 0, 4, 16, 1],
      [168, 3, 0, 64, 3, 144, 1, 0, 49, 0, 16, 3, 0, 40, 144],
      [3, 9, 0, 0, 9, 0, 0, 9, 0, 9, 0, 16, 1, 0, 16],
      [1, 0, 24, 2, 128, 49, 0, 16, 0, 144, 1, 0, 16, 1, 0],
      [16, 1, 152, 2, 0, 56, 3, 16, 0, 144, 1, 0, 16, 1, 0],
      [16, 1, 128, 24, 3, 16, 0, 144, 1, 0, 16, 1, 0, 16, 1],
      [128, 16, 3, 16, 0, 144, 1, 0, 16, 1, 0, 16, 1, 128, 8],
      [3, 16, 0, 0, 136, 144, 1, 0, 0, 16, 144, 1, 0, 9, 0],
      [16, 1, 152, 0, 128, 32, 1, 137, 0, 0, 8, 137, 0, 16, 0],
      [144, 1, 152, 0, 128, 24, 1, 8, 144, 0, 0, 137, 0, 0, 9],
      [0, 16, 1, 144, 1, 153, 171, 212, 0, 64, 24, 1, 76, 221, 32],
      [4, 0, 34, 64, 4, 0, 0, 66, 64, 4, 0, 0, 36, 0, 0],
      [33]
    ]

{- Preproceesed Plutus Script
evenRedeemer2'_0 :: PlutusTx.Data.Data -> PlutusTx.Data.Data -> ()
evenRedeemer2'_0 (PlutusTx.Data.I n_1) _d3_2 = if PlutusTx.Prelude.modulo n_1 2 PlutusTx.Eq.== 0
                                                then GHC.Tuple.()
                                                else PlutusTx.Prelude.error GHC.Tuple.()
-}

evenRedeemer2 :: Script era
evenRedeemer2 =
  (PlutusScript . pack . concat)
    [ [88, 254, 1, 0, 0, 51, 50, 0, 32, 2, 0, 50, 0, 50, 0],
      [51, 32, 2, 0, 51, 50, 0, 32, 2, 0, 51, 51, 51, 32, 2],
      [0, 32, 2, 0, 32, 2, 0, 51, 32, 2, 0, 50, 0, 50, 0],
      [0, 18, 0, 32, 3, 51, 51, 53, 48, 6, 0, 34, 0, 32, 6],
      [32, 2, 0, 32, 6, 32, 2, 0, 51, 53, 48, 21, 51, 53, 1],
      [48, 20, 51, 121, 0, 18, 64, 8, 144, 0, 16, 0, 4, 16, 1],
      [168, 3, 0, 64, 3, 144, 1, 0, 49, 0, 16, 3, 0, 40, 144],
      [3, 9, 0, 0, 9, 0, 0, 9, 0, 9, 0, 16, 1, 0, 16],
      [1, 0, 24, 2, 128, 49, 0, 16, 0, 144, 1, 0, 16, 1, 0],
      [16, 1, 152, 2, 0, 56, 3, 16, 0, 144, 1, 0, 16, 1, 0],
      [16, 1, 128, 24, 3, 16, 0, 144, 1, 0, 16, 1, 0, 16, 1],
      [128, 16, 3, 16, 0, 144, 1, 0, 16, 1, 0, 16, 1, 128, 8],
      [3, 16, 0, 0, 136, 144, 1, 0, 0, 16, 144, 1, 0, 9, 0],
      [16, 1, 152, 0, 128, 32, 1, 137, 0, 0, 8, 137, 0, 16, 0],
      [144, 1, 152, 0, 128, 24, 1, 8, 144, 0, 0, 137, 0, 0, 9],
      [0, 16, 1, 144, 1, 153, 171, 212, 0, 64, 24, 1, 76, 221, 32],
      [4, 0, 34, 64, 4, 0, 0, 66, 64, 4, 0, 0, 36, 0, 0],
      [33]
    ]

{- Preproceesed Plutus Script
redeemerIs102'_0 :: PlutusTx.Data.Data -> PlutusTx.Data.Data -> ()
redeemerIs102'_0 (PlutusTx.Data.I n_1) _d3_2 = if n_1 PlutusTx.Eq.== 10
                                                then GHC.Tuple.()
                                                else PlutusTx.Prelude.error GHC.Tuple.()
-}

redeemerIs102 :: Script era
redeemerIs102 =
  (PlutusScript . pack . concat)
    [ [88, 250, 1, 0, 0, 51, 50, 0, 32, 2, 0, 50, 0, 50, 0],
      [51, 32, 2, 0, 51, 50, 0, 32, 2, 0, 51, 51, 51, 32, 2],
      [0, 32, 2, 0, 32, 2, 0, 51, 32, 2, 0, 50, 0, 50, 0],
      [0, 18, 0, 32, 3, 51, 51, 53, 48, 6, 0, 34, 0, 32, 6],
      [32, 2, 0, 32, 6, 32, 2, 0, 51, 53, 48, 21, 51, 53, 1],
      [48, 20, 0, 36, 128, 80, 128, 0, 32, 128, 13, 64, 24, 2, 0],
      [28, 128, 8, 1, 136, 0, 128, 24, 1, 68, 128, 24, 72, 0, 0],
      [72, 0, 0, 72, 0, 72, 0, 128, 8, 0, 128, 8, 0, 192, 20],
      [1, 136, 0, 128, 4, 128, 8, 0, 128, 8, 0, 128, 12, 192, 16],
      [1, 192, 24, 128, 4, 128, 8, 0, 128, 8, 0, 128, 12, 0, 192],
      [24, 128, 4, 128, 8, 0, 128, 8, 0, 128, 12, 0, 128, 24, 128],
      [4, 128, 8, 0, 128, 8, 0, 128, 12, 0, 64, 24, 128, 0, 4],
      [68, 128, 8, 0, 0, 132, 128, 8, 0, 72, 0, 128, 12, 192, 4],
      [1, 0, 12, 72, 0, 0, 68, 72, 0, 128, 4, 128, 12, 192, 4],
      [0, 192, 8, 68, 128, 0, 4, 72, 0, 0, 72, 0, 128, 12, 128],
      [12, 205, 94, 160, 2, 0, 192, 10, 102, 233, 0, 32, 1, 18, 0],
      [32, 0, 2, 18, 0, 32, 0, 1, 32, 0, 1, 1]
    ]
